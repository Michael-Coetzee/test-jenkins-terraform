#!groovyâ€‹

pipeline {
    agent { label 'cordfinance' } 
    stages { 
        stage('pull image') {
            steps {
                script {
                    docker.withRegistry('https://terraformtest.azurecr.io/terraform-az', 'test-terraform') {
                        image = docker.image('terraformtest.azurecr.io/terraform-az')
                        image.pull()
                    }
                }
            }
        }
        // stage ('Testing') {
        //     steps {
        //         script {
        //             image.withRun('-v /home/cfadmin/workspace/test:/opt/workspace') { c ->
        //                 image.inside(
        //                     sh 'cd terraform-plans/create-vmss-from-image; terraform init -input=false; ls -l'
        //                 )
        //             }
        //         }
        //     }
        // }
        stage('Init parameters') {
            steps {
                sh 'docker run -t -v /home/cfadmin/workspace/test:/opt/workspace terraformtest.azurecr.io/terraform-az /bin/bash -c cd terraform-plans/create-vmss-from-image && /bin/bash -c terraform init -input=false'
                  
            }
        }
        // stage('Terraform plan'){
        //     steps {
        //         // Get the VM image ID for the VMSS  
        //         sh  '''
        //                 az login --service-principal -u $ARM_CLIENT_ID -p $ARM_CLIENT_SECRET --tenant $ARM_TENANT_ID
        //             '''

        //         image_id = sh (
        //                     script: "az image show -g $vm_images_rg -n $image_name --query '{VMName:id}' --out tsv",
        //                     returnStdout: true).trim()

        //         sh (script:"cd terraform-plans/create-vmss-from-image && terraform plan -out=tfplan -input=false -var 'terraform_resource_group='$vmss_rg -var 'terraform_vmss_name='$vmss_name -var 'terraform_azure_region='$location -var 'terraform_image_id='$image_id")   
        //     }
        // }
    }
}