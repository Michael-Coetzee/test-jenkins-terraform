#!groovyâ€‹

pipeline {
    agent { label 'cordfinance' } 
    stages { 
        stage('pull image') {
            steps {
                script {
                    docker.withRegistry('https://terraformtest.azurecr.io/terraform-az', 'test-terraform') {
                        image = docker.image('terraform-az:latest')
                        image.pull()
                    }
                }
            }
        }
        stage('Init parameters') {
            steps {
                  sh 'pwd'
                  sh "docker run -t terraformtest.azurecr.io/terraform-az terraform init -input=false"
                  sh 'docker run -t terraformtest.azurecr.io/terraform-az pwd'
                  sh 'docker run -t terraformtest.azurecr.io/terraform-az ls -l'
            }
        }
        // stage('Terraform plan'){
        //     steps {
        //         // Get the VM image ID for the VMSS  
        //         sh  '''
        //                 az login --service-principal -u $ARM_CLIENT_ID -p $ARM_CLIENT_SECRET --tenant $ARM_TENANT_ID
        //             '''

        //         image_id = sh (
        //                     script: "az image show -g $vm_images_rg -n $image_name --query '{VMName:id}' --out tsv",
        //                     returnStdout: true).trim()

        //         sh (script:"cd terraform-plans/create-vmss-from-image && terraform plan -out=tfplan -input=false -var 'terraform_resource_group='$vmss_rg -var 'terraform_vmss_name='$vmss_name -var 'terraform_azure_region='$location -var 'terraform_image_id='$image_id")   
        //     }
        // }
    }
} 